====================
Keyword preferences

- volunteers express the science areas and locations they
    want to compute for (yes)
    willing to compute for (maybe)
    don't want to compute for (no)
    default: all "maybe"
- projects express the properties of themselves, and their jobs

------------
Science keywords: hierarchy
	biology
		medicine
			cancer
			ebola
		phylogeny
	astronomy
	physics
	earth science
	math

Location of science project
	Asia
    Europe
        CERN
    Americas
        United States
            U. Texas
            UCB
open results?
    ONLY open results
    prefer open results
    don't care

for profit?
    not clear because of deals like Monsanto/UCB
--------------
each project can have associated keywords
    each one has a fraction, indicating what fraction of work
    has that keyword.
    
each job can have associated keywords

-------------
If a new keyword is added, it's automatically allowed
(neither wanted nor vetoed) for all users.
?? should users be defaulted to no or maybe?
====================
Allocation
--------------
The way in which computing power is divided among projects and users.
"Hard allocation": one that guaranteed, based on assumptions
about volunteer pool.
--------------
goals: multi-objective
    honor hard allocations
    respect soft allocations
    respect user prefs
    maximize throughput
--------------    
We can estimate the total throughput of the system,
   and we can break it down by resource type,
   and for a given set of keywords we can see how much is not vetoed.

Goal: someone comes to SU with an allocation request, which includes
- the available app version types
    (CPU, NVIDIA, AMD, platform, VM)
- the set of keywords
- # FLOPs
We can tell them whether this can be granted, and if so starting when

Parameters:
- what % of resources to use for allocations (50?)
- max % for a single allocation (10?)

Projects also get an unallocated share,
with a fraction determined by the popularity of their keywords

to process an allocation request:
select hosts that aren't ruled out by keywords
total their flops for eligible resources
------------
SU serves as a scheduler at the level of project.
It keeps track of targets, allocations, balances, host assignments.
SU allocation is at the granularity of project.
If a project needs app- or user-level granularity it can either
    - run multiple BOINC projects, 1 per user/app
    - use BOINC's built-in allocation system

An "allocation" consists of
- an initial balance
- the rate of balance accrual
- the interval of balance accrual
where "balance" is in terms of FLOPs

There are two measures of work done:
1) REC, as reported directly by clients
2) credit, as reported by projects

2) is cheat-resistant, 1) is not
1) is up-to-date, 2) is not (long jobs, validation delay)

Approach:
use 1) from SU scheduling, but don't show it to volunteers
(eliminate incentive for cheating)

show 2) to volunteers.

?? what if SU assigns a host to a project, and the project doesn't have work?
	SU should work in a reasonable way for sporadic workloads
    BOINC client:
    if devices are idle, and scheduler RPC returns nothing
    do an AM RPC, but only every so often
    (min AM RPC interval?)
Need way for SU to check if project has work?
--------------
gives projects more allocation if they supply computing?
    No.  nanoHub users are going to attach to nanoHub, not SU
--------------
========================================
Accounting
goals:
maintain daily history for
	total:
		CPU flops delta and total
		GPU flops delta and total
		CPU time delta and total
		GPU time delta and total
		# active hosts
		# active hosts w/ usable GPU
		# active users
		# jobs success
		# jobs fail
	project:
		CPU flops delta and total
		GPU flops delta and total
		CPU time delta and total
		GPU time delta and total
		# jobs success
		# jobs fail
	user:
		CPU flops delta and total
		GPU flops delta and total
		CPU time delta and total
		GPU time delta and total
		# jobs success
		# jobs fail

maintain per host (no history)
	CPU flops total
	CPU time total
	GPU flops total
	GPU time total
	has usable GPU
	# jobs success
	# jobs fail
	p_vm_extensions_disabled
		(should add this to standard code)

client changes:
	maintain
		per project
			total CPU and GPU time
			total CPU and GPU flops
				(take CPU throttling into account)
			# jobs success, fail
	report these in AM RPC
	report has usable GPU

Note: for convenience, flops is always measured in EC units

AM RPC handler
	compute deltas (relative to host record)
	sanity-check deltas
		time: #instances x dt
		flops: same, times fastest possible device (100 GFLOPS *256 CPU, 100 TFLOPS*8 GPU)
	update host record
	create accounting_user record if none
	atomically update delta, total fields of most recent account records for total, project, host

daily accounting program
	create new records for total, project, user
		new.delta = 0
		new.total = old.total + old.delta
	for total:
		compute # active hosts based on last RPC time
		group by userid to get # active users
		update # hosts w/ usable GPU
--------------
How to avoid accounting pre-SU EC?
invariant: when a host attaches to a project, totals start at zero

host_project has 2 sets of accounting:
    client_last_*   last value reported by client
        this may reset to zero if we detach/reattach the project
    total_*
        sum of deltas so far

First RPC:
    create host_project for all reported projects.
    set client_last_*; no deltas

All RPCs:
    if we send a project not currently reported
        if it has a host_project
            set client_last_* to zero
        else
            create a host_project, all zeros
    set "requested" for projects we're sending
    set "active" for these plus projects reported by client

============================
projects
tacc
    http://129.114.6.131/tacctest/
    Biology
    United States
nanohub:
    https://devboinc.nanohub.org/boincserver/
    Nanotechnology
    United States
SETI@home
    Astronomy, SETI
    United States, University of California
BOINC Test Project
    http://boinc.berkeley.edu/test/
Einstein@home
    Astronomy, Physics
    Germany, United States
Rosetta
    Biology, Medicine
    United States, University of Washington

-----------------
categorize keywords as major or minor
    major: astro, bio, env, physics, math
        US, Europe, Asia
categorize projects as auto or on-demand
    auto: accounts creation initiated on SU account creation

====================
User Web site
functions:
    new user experience
    return user experience
    catalog of research projects
        where does this come from?
    new from projects
--------------
main page (index.php)
    If not logged in
        call to action; describe VC, science; pictures; safety
        big Join button, small login link

    if logged in
        if never got RPC from this user
            need to download;link
        if last RPC is old or client version is old
            advise to download; link
        if problem accounts, link to problem account page
        progress/accounting stuff
            show graph of recent EC
            "In the last 24 hours your computers have contributed
            CPU time/EC, GPU time/EC, #jobs success
            You are contributing to science projects doing x, x, x
            located in y, y, y"
        link to Account page
        Add new device
            Android:
            log in from device,

    menu bar (all pages)
        Your account (if logged in)
            projects
            science prefs
            computing prefs
            computing stats
            certificate?
        Computing
            projects
            leaderboards
        Community
            message boards
            teams
            profiles
            community prefs
            user search
            user of the day
        Site
            search
            languages
            about SU
            help
--------------------
Join page (su_join.php)
    create account info
        email
        screen name
        password
    basic prefs
    send cookie
    goes to...
--------------------
Download page (su_download.php)
    says you need to install BOINC
    Download link (direct)
        goes via concierge; sets cookies
        When user runs app, welcome screen says
            You are now running SU as user Fred
            No further action is needed.
            SU will run science jobs in the background.
            OK
    small print: if BOINC version >= 7.10 and VBox already installed:
        In BOINC Manager
            select Tools/user account manager
            choose SU
            enter the email address and password of your SU account
    goes to...
--------------------
Getting started (su_intro.php)
    Welcome, thanks etc.
    add to your other devices too
    tell your family and friends
    Explain
        computing prefs
        keyword prefs
    join a team
--------------------
User account page (su_home.php)
    like BOINC home page:
    left:
        problem accounts
        graphs of recent work
        link to list of hosts
        links to prefs
            keywords
            computing prefs
            community prefs
    right:
        account info
        social functions
--------------------
host list (su_hosts.php)
    columns:
    name
    boinc version
    last RPC
    active projects
--------------------
keyword prefs edit page (su_prefs.php)
    show list of major keywords, yes/maybe/no radio buttons
    "more" button shows all keywords
    if user has prefs for non-major keywords, show all in that category
--------------------
global prefs edit page
    if min/med/max
        show radio buttons
        link to all prefs
--------------------
connect account page (su_connect.php>
    explain the problem
    show list of problem accounts; click for details
    details page:
        let the user enter password of existing account.
        OK: contacts project, tell user if fail
---------------------
Accounting pages (su_acct.php)
    Totals: tables and graphs of totals
    projects: table of projects (su_projects_acct.php; merge)
    project: graphs for 1 project
    users: list of top users
    user: graphs for 1 user
---------------------
new items
    would be good to show news items from project
    easiest way: each project exports RSS feed
    news items are tagged with keywords
    SU aggregates these
    if logged in, filter/order by keyword
    show combined stream to others

    Give projects more allocation if they supply news?
forums
    for discussion of projects, keywords?
==================
Admin web site
main page (su_manage.php)
    links to
        edit projects
        edit keywords
        accounting pages
project add/remove/edit (su_projects_edit.php)
keyword edit page (su_keywords.php)
    show list of keywords; checkbox for major; button for edit/delete
==================
RPC handler

when are accounts created?
on initial registration:
    pick N best projects based on prefs
        (same logic as in RPC handler)
    start account creation for those projects
on RPC:
    pick N best projects
    if not registered with any of them
        return highest-score project we are registered with

-------------
We need "detach when no more work and AM RPC done" flag on client
==================
keyword-based scheduling

submission: batch has keywords
copied to results (new DB field, 256 chars)

each volunteer reports yes/no keywords in sched request
	(AM can supply "project opaque" text, passed to projects)

score-based scheduling:
	"no" keyword match returns -1
	"yes" match adds 1

ensure non-starvation of jobs in cache
	add job age to score

Project keywords include a fraction flag
	(estimate fraction of work from that project with that keyword).
	100 means all work from project will have that keyword

If a user has a "no" keyword matching a project "all" keyword,
don't attach to that project.

Can compute:
	- the fraction of work from project that user can do
	- the fraction of work from project that user wants to do
==================
Project plan
- web site for register and prefs

- admin web interface for editing projects, apps, keywords, quotas

- RPC stubs for account creation, setting prefs

- integrated client download
==================
documents, technical reports

Allocating volunteer computing resources
