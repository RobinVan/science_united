Keywords
    area:astronomy area:physics
    country:us continent:north_america
    institution:university_of_illinois
    open_results:yes
    for_profit:no
    etc.
--------------
each project and application can have associated keywords

Each user has 2 lists of keywords: wanted and vetoed.
Vetoed: if matches any of project/app, don't run it.
Wanted: prioritize based on number of matches.

If a new keyword is added, it's automatically allowed
(neither wanted nor vetoed) for all users.
--------------
Allocation
Would like to come as close to guaranteed allocation as possible.

We can estimate the total throughput of the system,
   and we can break it down by resource type,
   and for a given set of keywords we can see how much is not vetoed.

Goal: someone comes to use the an allocation request, which includes
- the available app version types
    (CPU, NVIDIA, AMD, platform, VM)
- the set of keywords
- # FLOPs

Parameters:
- what % of resources to use for allocations (50?)
- max % for a single allocation (10?)

Projects also get an unallocated share,
with a fraction determined by the popularity of their keywords
(and keywords of their apps)

to process an allocation request:
select hosts that aren't ruled out by keywords
total their flops for eligible resources
--------------
Need a way to find out how much work has been done by a host for an app
approaches:
    1) track it in the client, report in AM RPC
    2) get it from the project

1) seems preferable; will need a new client
--------------
database

use a standard BOINC DB
    user
    host
    message boards

additional tables:
project
    keywords
app
    link to project
    keywords
    description of science, scientists
app version
    link to app
    platform
    GPU; needed software
    need Vbox? need VM accel?
allocation
    app
    flops
news/discussion
    message board for each project, each app

The set of keywords can be represented by a JSON file

--------------
acct mgr RPC handler
	attach host to all projects w/ an app in selected area
	set project preferences to allow only apps in selected area
	RS(P) = 0
	for each area A
		for each P associated with A
			RS(P) += S(A)*S(P)

Need a way to gracefully detach projects
	(finish existing work, then detach)

--------------
McLennan idea:
projects are rewarded for
	- creating interesting news stories
and maybe also for
	- contributing computing power themselves

Use HUBzero to create the site?
